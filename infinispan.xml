<infinispan
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="urn:infinispan:config:14.0 https://infinispan.org/schemas/infinispan-config-14.0.xsd
                       urn:infinispan:server:14.0 https://infinispan.org/schemas/infinispan-server-14.0.xsd"
   xmlns="urn:infinispan:config:14.0"
   xmlns:server="urn:infinispan:server:14.0">

   <jgroups>
      <stack name="jdbc-ping-tcp" extends="tcp">
         <JDBC_PING connection_driver="org.postgresql.Driver"
            connection_username="${env.DB_USERNAME}" connection_password="${env.DB_PASSWORD}"
            connection_url="${env.DB_URL}"
            initialize_sql="CREATE TABLE IF NOT EXISTS JGROUPSPING (own_addr varchar(200) NOT NULL,
 cluster_name varchar(200) NOT NULL, ping_data BYTEA, constraint PK_JGROUPSPING PRIMARY KEY
 (own_addr, cluster_name));"
            info_writer_sleep_time="500"
            remove_all_data_on_view_change="true"
            stack.combine="REPLACE"
            stack.position="MPING" />
      </stack>
   </jgroups>

   <cache-container name="default" statistics="true">
      <transport cluster="${infinispan.cluster.name:cluster}"
         stack="${infinispan.cluster.stack:jdbc-ping-tcp}" node-name="${infinispan.node.name:}" />
      <security>
         <authorization />
      </security>
   </cache-container>

   <server xmlns="urn:infinispan:server:14.0">
      <interfaces>
         <interface name="public">
            <inet-address value="${infinispan.bind.address:127.0.0.1}" />
         </interface>
      </interfaces>

      <socket-bindings default-interface="public"
         port-offset="${infinispan.socket.binding.port-offset:0}">
         <socket-binding name="default" port="${infinispan.bind.port:11222}" />
      </socket-bindings>

      <security>
         <credential-stores>
            <credential-store name="credentials" path="credentials.pfx">
               <clear-text-credential clear-text="secret" />
            </credential-store>
         </credential-stores>
         <security-realms>
            <security-realm name="default">
               <!-- Uncomment to enable TLS on the realm -->
               <!-- server-identities>
                  <ssl>
                     <keystore path="application.keystore"
                               password="password" alias="server"
                               generate-self-signed-certificate-host="localhost"/>
                  </ssl>
               </server-identities-->
               <properties-realm groups-attribute="Roles">
                  <user-properties path="users.properties" />
                  <group-properties path="groups.properties" />
               </properties-realm>
            </security-realm>
         </security-realms>
      </security>

      <endpoints socket-binding="default" security-realm="default" />
   </server>
</infinispan>